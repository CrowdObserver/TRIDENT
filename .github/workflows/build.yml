name: Build TRIDENT (Main)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          # Windows builds
          - os: windows-latest
            python: '3.11'
            name: windows-py311
            arch: amd64
          # macOS Intel builds  
          - os: macos-13
            python: '3.11'
            name: macos-intel-py311
            arch: x86_64
          # macOS Apple Silicon builds
          - os: macos-14
            python: '3.11'
            name: macos-arm64-py311
            arch: arm64
          # Linux builds
          - os: ubuntu-latest
            python: '3.11' 
            name: linux-py311
            arch: x86_64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pybind11

    - name: Build
      run: |
        cd cpp
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release
    
    - name: Verify build output
      shell: bash
      run: |
        echo "=== Build output verification ==="
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          echo "Contents of trident_extension/bin:"
          cmd //c "dir trident_extension\\bin\\ 2>nul || echo bin directory does not exist"
        else
          echo "Contents of trident_extension/bin:"
          ls -la trident_extension/bin/ 2>/dev/null || echo "bin directory does not exist"
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: trident-${{ matrix.name }}
        path: trident_extension/bin/
      continue-on-error: true