name: Build TRIDENT

on:
  push:
    branches: [ legacy ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          # Windows builds
          - os: windows-latest
            python: '3.10'
            name: windows-py310
            arch: amd64
          - os: windows-latest
            python: '3.11'
            name: windows-py311
            arch: amd64
          # macOS Intel builds  
          - os: macos-13
            python: '3.10'
            name: macos-intel-py310
            arch: x86_64
          - os: macos-13
            python: '3.11'
            name: macos-intel-py311
            arch: x86_64
          # macOS Apple Silicon builds
          - os: macos-14
            python: '3.10'
            name: macos-arm64-py310
            arch: arm64
          - os: macos-14
            python: '3.11'
            name: macos-arm64-py311
            arch: arm64
          # Linux builds
          - os: ubuntu-latest
            python: '3.10' 
            name: linux-py310
            arch: x86_64
          - os: ubuntu-latest
            python: '3.11' 
            name: linux-py311
            arch: x86_64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pybind11

    - name: Build
      run: |
        cd cpp
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release
    
    - name: Debug - Show all build output (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        echo === Build directory contents ===
        dir cpp\build\ /s /b 2>nul || echo Build directory not found
        echo === trident_add-on directory contents ===
        dir trident_add-on\ /b 2>nul || echo trident_add-on directory not found
        echo === Looking for .pyd files anywhere ===
        dir /s *.pyd 2>nul || echo No .pyd files found anywhere
        echo === Looking for trident files anywhere ===
        dir /s trident.* 2>nul || echo No trident files found
        
    - name: Debug - Show all build output (Unix)
      if: runner.os != 'Windows'
      run: |
        echo "=== Build directory contents ==="
        find cpp/build -type f 2>/dev/null || echo "Build directory not found"
        echo "=== trident_add-on directory contents ==="
        ls -la trident_add-on/ 2>/dev/null || echo "trident_add-on directory not found"
        echo "=== Looking for .so files anywhere ==="
        find . -name "*.so" -type f 2>/dev/null || echo "No .so files found"
    
    - name: Create cpp_build directory and copy files (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        if not exist "trident_add-on\cpp_build" mkdir trident_add-on\cpp_build
        echo Searching for and copying .pyd files...
        for /r . %%f in (*.pyd) do if exist "%%f" (echo Found .pyd: %%f & copy "%%f" "trident_add-on\cpp_build\")
        echo Copying other trident files...
        if exist "trident_add-on\trident.dll" copy "trident_add-on\trident.dll" "trident_add-on\cpp_build\"
        if exist "trident_add-on\trident.lib" copy "trident_add-on\trident.lib" "trident_add-on\cpp_build\"
        if exist "trident_add-on\trident.exp" copy "trident_add-on\trident.exp" "trident_add-on\cpp_build\"
        if exist "trident_add-on\trident.pdb" copy "trident_add-on\trident.pdb" "trident_add-on\cpp_build\"
        
    - name: Create cpp_build directory and copy files (Unix)
      if: runner.os != 'Windows'
      run: |
        mkdir -p trident_add-on/cpp_build
        echo "Searching for and copying .so files..."
        find . -name "*.so" -type f -exec cp {} trident_add-on/cpp_build/ \; -exec echo "Copied: {}" \; 2>/dev/null || echo "No .so files found"
        echo "Copying other trident files..."
        find trident_add-on -maxdepth 1 -name "trident*" -type f -exec cp {} trident_add-on/cpp_build/ \; 2>/dev/null || echo "No additional trident files found"
    
    - name: Final debug - Show cpp_build contents
      shell: bash
      run: |
        echo "=== Final cpp_build contents ==="
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          cmd //c "dir trident_add-on\\cpp_build\\ 2>nul || echo cpp_build is empty"
        else
          ls -la trident_add-on/cpp_build/ 2>/dev/null || echo "cpp_build is empty"
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: trident-${{ matrix.name }}
        path: trident_add-on/cpp_build/
      continue-on-error: true